// <auto-generated />
using System;
using AllAboutGames.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AllAboutGames.Migrations
{
    [DbContext(typeof(AllAboutGamesDataContext))]
    [Migration("20220312122723_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("AllAboutGames.Data.Models.Tag", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("TagID"));

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("VideoGameID")
                        .HasColumnType("integer");

                    b.HasKey("TagID");

                    b.HasIndex("VideoGameID");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("AllAboutGames.Data.Models.VideoGame", b =>
                {
                    b.Property<int>("VideoGameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("VideoGameID"));

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VideoGameName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("VideoGameID");

                    b.ToTable("VideoGames");
                });

            modelBuilder.Entity("AllAboutGames.Data.Models.Tag", b =>
                {
                    b.HasOne("AllAboutGames.Data.Models.VideoGame", null)
                        .WithMany("Tags")
                        .HasForeignKey("VideoGameID");
                });

            modelBuilder.Entity("AllAboutGames.Data.Models.VideoGame", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
